#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è DX Bot
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è DX Bot..."
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo "üñ•Ô∏è  –û–°: $(lsb_release -d | cut -f2)"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç root"
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo $0"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if command -v $1 &> /dev/null; then
        return 0
    else
        return 1
    fi
}

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
log "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
log "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
apt install -y curl wget git nano htop unzip software-properties-common \
    apt-transport-https ca-certificates gnupg lsb-release \
    python3 python3-pip python3-venv

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
if ! check_command docker; then
    log "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    if [ ! -z "$SUDO_USER" ]; then
        usermod -aG docker $SUDO_USER
        log "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $SUDO_USER –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É docker"
    fi
else
    log "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
if ! check_command docker-compose; then
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
else
    log "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker-compose --version)"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º Docker —Å–µ—Ä–≤–∏—Å
log "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Docker —Å–µ—Ä–≤–∏—Å..."
systemctl enable docker
systemctl start docker

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
log "üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p /opt/dx-bot
cd /opt/dx-bot

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ ! -d ".git" ]; then
    log "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    git clone https://github.com/benchikkk/dx-bot-server.git .
else
    log "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
    git pull origin main
fi

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
log "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã..."
chmod +x manage.sh server_setup.sh deploy.sh

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
    log "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cp env.example .env
    log "‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ BOT_TOKEN –∏ CHAT_ID"
else
    log "‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
log "üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö..."
mkdir -p bot_data/screenshots bot_data/json_history logs

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
log "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞..."
chown -R $SUDO_USER:$SUDO_USER /opt/dx-bot
chmod -R 755 /opt/dx-bot

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
log "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
if check_command ufw; then
    ufw --force enable
    ufw allow ssh
    ufw allow 80
    ufw allow 443
    log "‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    log "‚ö†Ô∏è  UFW –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É firewall"
fi

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
log "‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
cat > /etc/systemd/system/dx-bot.service << EOF
[Unit]
Description=DX Bot Service
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=/opt/dx-bot
ExecStart=/opt/dx-bot/manage.sh start
ExecStop=/opt/dx-bot/manage.sh stop
User=$SUDO_USER
Group=$SUDO_USER

[Install]
WantedBy=multi-user.target
EOF

# –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
systemctl daemon-reload
systemctl enable dx-bot.service

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
if docker info > /dev/null 2>&1; then
    log "‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Docker"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..."
if docker-compose --version > /dev/null 2>&1; then
    log "‚úÖ Docker Compose —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Docker Compose"
    exit 1
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª:"
echo "   nano /opt/dx-bot/.env"
echo ""
echo "2. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã –≤ .env:"
echo "   BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞"
echo "   CHAT_ID=–≤–∞—à_chat_id"
echo ""
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
echo "   cd /opt/dx-bot"
echo "   ./manage.sh start"
echo ""
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
echo "   ./manage.sh status"
echo ""
echo "5. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏:"
echo "   ./manage.sh logs"
echo ""
echo "üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:"
echo "- Firewall –≤–∫–ª—é—á–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
echo "- SSH –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω"
echo "- –°–æ–∑–¥–∞–Ω systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "- htop - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤"
echo "- df -h - –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ"
echo "- docker stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "- systemctl status dx-bot - —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
echo ""
echo "üîÑ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫:"
echo "- –°–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ"
echo "- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: systemctl start/stop/restart dx-bot"
echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "- cd /opt/dx-bot && ./manage.sh --help"
echo "- docker-compose logs -f"
echo "- docker system prune -a (–æ—á–∏—Å—Ç–∫–∞ Docker)"
